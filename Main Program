#include <Arduino_FreeRTOS.h>

//====STOPWATCH====
int state = 0; //detect sensor stopwatch
//variabel nilai millis
long millisSebelum;
int milidetik, detik, menit, jam;
//debounce
int currentState1 = HIGH;
int lastState1 = HIGH;
//sensor stopwatch
int irSensor = 13;
int bendera = 0; //bendera for stopwatch debounce

//define task handles
TaskHandle_t TaskStopwatch_Handler;
TaskHandle_t TaskLight_Handler;

// define two tasks for Blink  & Serial
void TaskStopwatch( void *pvParameters );
void TaskLight(void* pvParameters);

// the setup function runs once when you press reset or power the board
void setup() {
  // initialize serial communication at 9600 bits per second:
  Serial.begin(9600);
  pinMode(irSensor, INPUT);
  // Now set up two tasks to run independently.
  xTaskCreate(
    TaskStopwatch
    ,  "Blink"   // A name just for humans
    ,  128  // This stack size can be checked & adjusted by reading the Stack Highwater
    ,  NULL //Parameters passed to the task function
    ,  2  // Priority, with 2 (configMAX_PRIORITIES - 1) being the highest, and 0 being the lowest.
    ,  &TaskStopwatch_Handler );//Task handle

  xTaskCreate(
    TaskLight
    ,  "Serial"
    ,  128  // Stack size
    ,  NULL //Parameters passed to the task function
    ,  1  // Priority
    ,  &TaskLight_Handler );  //Task handle
}


void loop()
{
  // Empty. Things are done in Tasks.
}

/*--------------------------------------------------*/
/*---------------------- Tasks ---------------------*/
/*--------------------------------------------------*/

void TaskLight(void* pvParameters) {
  (void) pvParameters;
  for (;;) // A Task shall never return or exit.
  {

  }
}


void TaskStopwatch(void *pvParameters)  // This is a task.
{
  (void) pvParameters;
  for (;;) // A Task shall never return or exit.
  {
      currentState1 = digitalRead(irSensor);
    if (lastState1 == HIGH && currentState1 == LOW) {
      bendera++;
    }
    lastState1 = currentState1;
    if (bendera == 1) {
      if (millis() >= millisSebelum + 100) {
        milidetik++;
        if (milidetik >= 10) {
          milidetik = 0;
          detik++;

          if (detik >= 60) {
            detik = 0;
            menit++;
          }
        }
        Serial.print(menit);
        Serial.print("-");
        Serial.print(detik);
        Serial.print("-");
        Serial.print(milidetik);
        Serial.println("-");
        millisSebelum = millis();
      }
    } else if (bendera == 2) {
      Serial.print(menit);
      Serial.print("-");
      Serial.print(detik);
      Serial.print("-");
      Serial.print(milidetik);
      Serial.println("-");
      millisSebelum = millis();
      vTaskDelay( 4000 / portTICK_PERIOD_MS ); // wait for one second
      bendera = 0;
    }
  }
}
